extends layout

block content

    .container.d-flex.justify-content-end.flex-column.mt-3

        form(method="post", , enctype='multipart/form-data')
            
            .card.mb-3.border-dark
                h5.card-header.fw-bold Informações
                .card-body
                    input.form-control(type='text', name='name', placeholder="Nome", value=rua.name, required)
                    textarea.form-control.mt-3(rows="3", name="description", placeholder="Descrição", required)
                        | #{rua.description.join('\n')}

                    .card.mb-0.mt-3.w-100.border-dark
                        .card-header.d-flex.justify-content-between
                            h5.fw-bold.align-items-center.mb-0 Datas Referidas
                            img#addDate(src="/icons/plus-circle-fill.svg", type="button")
                        .card-body.pb-0.overflow-scroll#datesContainer(style="max-height: 167px;")
                            each data, index in datas
                                .row.g-3.mb-3(id=`date${index}`)
                                    .col
                                        input.form-control(type='text', name='dates', placeholder='Data', value=data.name, required)
                                    .col
                                        button.btn.btn-danger.w-100.deleteDate(data-field-id=`date${index}`) Eliminar

                    .card.mb-0.mt-3.w-100.border-dark
                        .card-header.d-flex.justify-content-between
                            h5.fw-bold.align-items-center.mb-0 Lugares Referidos
                            img#addPlace(src="/icons/plus-circle-fill.svg", type="button")
                        .card-body.pb-0.overflow-scroll#placesContainer(style="max-height: 167px;")
                            each lugar, index in lugares
                                .row.g-3.mb-3(id=`place${index}`)
                                    .col
                                        input.form-control(type='text', name='places', placeholder='Lugar', value=lugar.name, required)
                                    .col
                                        button.btn.btn-danger.w-100.deletePlace(data-field-id=`place${index}`) Eliminar

                    .card.mb-0.mt-3.w-100.border-dark
                        .card-header.d-flex.justify-content-between
                            h5.fw-bold.align-items-center.mb-0 Entidades Referidas
                            img#addEntity(src="/icons/plus-circle-fill.svg", type="button")
                        .card-body.pb-0.overflow-scroll#entitiesContainer(style="max-height: 167px;")
                            each entidade, index in entidades
                                .row.g-3.mb-3(id=`entity${index}`)
                                    .col
                                        input.form-control(type='text', name='entities', placeholder='Entidade', value=entidade.name, required)
                                    .col
                                        button.btn.btn-danger.w-100.deleteEntity(data-field-id=`entity${index}`) Eliminar

            .card.mt-3.mb-3.border-dark
                .card-header.d-flex.justify-content-between
                    h5.fw-bold.align-items-center.mb-0 Casas
                    img#addHouse(src="/icons/plus-circle-fill.svg", type="button")
                .card-body.pb-0#housesContainer
                    each house, index in rua.houses
                        .card.mb-3.w-100.p-3.border-dark(id=`house${index}`)
                            .row.g-3
                                .col
                                    input.form-control(type='text', name='enfiteuta', placeholder='Enfiteuta', value=house.enfiteuta, required)
                                .col
                                    input.form-control(type='text', name='subst', placeholder='Pagamento', value=house.subst, required)
                                .col
                                    input.form-control(type='text', name='vista', placeholder='Vista', value=house.vista)
                                .col
                                    button.btn.btn-danger.w-100.deleteHouse(data-field-id=`house${index}`) Eliminar
                            textarea.form-control.mt-3(rows="3", name="desc", placeholder="Descrição", required)
                                | #{house.desc.join('\n')}

            .card.mt-3.mb-3.border-dark
                .card-header.d-flex.justify-content-between
                    h5.fw-bold.align-items-center.mb-0 Imagens Antigas
                    img#addOldImage(src="/icons/plus-circle-fill.svg", type="button")
                .card-body.pb-0#oldImagesContainer
                    each imagem_antiga, index in imagens_antigas
                        .row.g-3.mb-3(id=`oldImage${index}`)
                            .col
                                input.form-control.h-100(type='text', name='oldImageSubst', placeholder='Referência', value=imagem_antiga.subst, required)
                            .col 
                                button.btn.btn-secondary.w-100(type='button', data-bs-toggle='modal', data-bs-target=`#oldImageModal${index}`)
                                    | #{imagem_antiga.subst} 
                            .col(hidden)
                                input.form-control(type="hidden", name="oldImageFiles", value=imagem_antiga['_id'], required)
                            .col
                                button.btn.btn-danger.w-100.h-100.deleteOldImage(data-field-id=`oldImage${index}`) Eliminar

            .card.mt-3.mb-3.border-dark
                    .card-header.d-flex.justify-content-between
                        h5.fw-bold.align-items-center.mb-0 Imagens Atuais
                        img#addNewImage(src="/icons/plus-circle-fill.svg", type="button")
                    .card-body.pb-0#newImagesContainer
                        each imagem_atual, index in imagens_atuais
                            .row.g-3.mb-3(id=`newImage${index}`)
                                .col
                                    input.form-control.h-100(type='text', name='newImageSubst', placeholder='Referência', value=imagem_atual.subst.split('/').pop(), required)
                                .col
                                    button.btn.btn-secondary.w-100(type='button', data-bs-toggle='modal', data-bs-target=`#newImageModal${index}`)
                                        | #{imagem_atual.subst.split('/').pop()} 
                                .col(hidden)
                                    input.form-control(type="hidden", name="newImageFiles", value=imagem_atual['_id'], required)
                                .col
                                    button.btn.btn-danger.w-100.h-100.deleteNewImage(data-field-id=`newImage${index}`) Eliminar

            .card.mb-3.mt-3.w-100.border-dark
                .card-header.d-flex.justify-content-between
                    h5.fw-bold.align-items-center.mb-0 Localização geográfica
                .card-body#datesContainer
                    .card.p-3.border-dark.bg-light
                        p.text-secondary Para preencher automaticamente as coordenadas geográficas da rua pode escrever no campo abaixo o nome da rua e pressionar "Pesquisa automática". Incluir códigos postais e/ou números de porta promove o sucesso da pesquisa.
                        .row.g-3#date1
                            .col
                                input#rua-search.form-control(type='text', name='rua-search', placeholder='Ex: Rua Padre António Vieira 23, 4700-006, São Vicente')
                            .col 
                                button.btn#generate-geo-cords.btn.btn-secondary.w-100(type="button") Pesquisa automática
                        p#geo-error.alert.alert-danger.d-none.mt-3.mb-0
                    .row.g-3.mt-0#date1
                        .col
                            input#lng-field.form-control(type='text', name='longitude', placeholder='Longitude' value=rua.geoCords? rua.geoCords.longitude : '' )
                        .col
                            input#lat-field.form-control(type='text', name='latitude', placeholder='Latitude' value=rua.geoCords? rua.geoCords.latitude : '' )
                        .col
                            button#preview-map.btn.btn-info.w-100(type="button") Pré-visualizar o mapa
                    p#map-preview-error.alert.alert-danger.d-none.mt-3.mb-0
                    link(href='https://api.mapbox.com/mapbox-gl-js/v2.9.1/mapbox-gl.css' rel='stylesheet')
                    script(src='https://api.mapbox.com/mapbox-gl-js/v2.9.1/mapbox-gl.js')
                    div.map-content.mt-3.d-none(style='height: 400px; position: relative')
                        div#map-preview.w-100.h-100.border.rounded(style='position: absolute; top: 0; left: 0')
                        // div to switch between map styles
                        div#menu.d-flex.align-items-center.rounded(style='position: absolute; background: #efefef; padding: 10px; top: 0; left: 0; font-family: "Open Sans", sans-serif; z-index: 5')
                            span.pe-2 Estilos: 
                            input#satellite-streets-v12(type='radio', name='rtoggle', value='satellite')
                            label(for='satellite-streets-v12') Satélite
                            input#light-v11(type='radio', name='rtoggle', value='light')
                            label(for='light-v11') Claro
                            input#dark-v11(type='radio', name='rtoggle', value='dark')
                            label(for='dark-v11') Escuro
                            input#streets-v12(type='radio', name='rtoggle', value='streets' checked='checked')
                            label(for='streets-v12') Ruas
                            input#outdoors-v12(type='radio', name='rtoggle', value='outdoors')
                            label(for='outdoors-v12') Exterior
                            button#toggle-3d.btn.btn-primary(type="button") Câmara lateral

            .row.g-3.mb-3
                .col
                    a.btn.btn-secondary.btn-lg.btn-block.w-100(href="/ruas/" + rua['_id']) Voltar
                .col
                    button.btn.btn-success.btn-lg.btn-block.w-100(type='submit') Atualizar

        // Imagens Antigas Modal
        each imagem_antiga, index in imagens_antigas
            .modal.fade(id=`oldImageModal${index}`, tabindex='-1', role='dialog', aria-hidden='true')
                .modal-dialog.modal-dialog-centered(role='document')
                    .modal-content
                        .modal-header.d-flex.justify-content-between
                            h5.modal-title
                                | #{imagem_antiga.subst}
                            button.btn.btn-close(type='button', data-bs-dismiss='modal')
                        .modal-body
                            img.rounded(src=`/imagens/antigo/${imagem_antiga['_id']}?token=${token}`, style="width:100%")

        // Imagens Atuais Modal
        each imagem_atual, index in imagens_atuais
            .modal.fade(id=`newImageModal${index}`, tabindex='-1', role='dialog', aria-hidden='true')
                .modal-dialog.modal-dialog-centered(role='document')
                    .modal-content
                        .modal-header.d-flex.justify-content-between
                            h5.modal-title
                                | #{imagem_atual.subst.split('/').pop()}
                            button.btn.btn-close(type='button', data-bs-dismiss='modal')
                        .modal-body
                            img.rounded(src=`/imagens/atual/${imagem_atual['_id']}?token=${token}`, style="width:100%")

    style.
        label {
            margin-right: 15px;
        }
        input {
            margin-right: 3px;
        }
    script(src="/js/fields.js", type="module")
    script(src="/js/maps.js")